@using ThesisCatalog.Core.Entities
<FluentStack Orientation="Orientation.Horizontal">
    <FluentNumberField
        @bind-Value="WeightDisplayValue"
        @bind-Value:after="WeightValueChangedHandler" Size="4"/>
    <FluentSelect
        TOption="string"
        @bind-Value="WeightUnitString"
        @bind-Value:after="WeightValueChangedHandler" Width="10em">
        @foreach (var weightUnit in Enum.GetValues<WeightUnit>())
        {
            <FluentOption Value="@weightUnit.ToString()">
                @weightUnit.ToString()
            </FluentOption>
        }
    </FluentSelect>
</FluentStack>

@code {
    private Weight? _weight;
    [Parameter] public Weight Weight { get; set; } = null!;
    [Parameter] public EventCallback<Weight> WeightChanged { get; set; }

    private double WeightDisplayValue { get; set; }
    private string WeightUnitString { get; set; } = WeightUnit.Kilograms.ToString();

    protected override void OnParametersSet()
    {
        _weight = Weight;
        WeightDisplayValue = _weight.DisplayValue;
        WeightUnitString = _weight.DisplayUnit.ToString();
    }

    private async Task WeightValueChangedHandler()
    {
        _weight = new Weight(WeightDisplayValue, Enum.Parse<WeightUnit>(WeightUnitString));
        await WeightChanged.InvokeAsync(_weight);
    }

}